//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cdc_Api.Dados
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IBEntitiesModel : DbContext
    {
        public IBEntitiesModel()
            : base("name=IBEntitiesModel")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Agencia> Agencias { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<Conta> Contas { get; set; }
        public virtual DbSet<Endereco> Enderecos { get; set; }
        public virtual DbSet<Lancamento> Lancamentos { get; set; }
        public virtual DbSet<Pacote> Pacotes { get; set; }
    
        public virtual int InsertEndereco(string logradouro, string bairro, string numero, string estado, string cidade, string bloco, string condominio)
        {
            var logradouroParameter = logradouro != null ?
                new ObjectParameter("Logradouro", logradouro) :
                new ObjectParameter("Logradouro", typeof(string));
    
            var bairroParameter = bairro != null ?
                new ObjectParameter("Bairro", bairro) :
                new ObjectParameter("Bairro", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("Cidade", cidade) :
                new ObjectParameter("Cidade", typeof(string));
    
            var blocoParameter = bloco != null ?
                new ObjectParameter("Bloco", bloco) :
                new ObjectParameter("Bloco", typeof(string));
    
            var condominioParameter = condominio != null ?
                new ObjectParameter("Condominio", condominio) :
                new ObjectParameter("Condominio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEndereco", logradouroParameter, bairroParameter, numeroParameter, estadoParameter, cidadeParameter, blocoParameter, condominioParameter);
        }
    }
}
